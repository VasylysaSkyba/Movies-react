{"version":3,"file":"static/js/591.fe0ad066.chunk.js","mappings":"2NACA,GAAiB,E,6CCuDjB,EAlDiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACrBJ,GAAW,GADU,mBAGIK,EAAAA,EAAAA,IAAiBX,GAHrB,gBAGXY,EAHW,EAGXA,KAERR,EAAUQ,GALS,gDAOnBJ,EAAS,KAAMK,SAPI,yBASnBP,GAAW,GATQ,4EAAH,qDAYpBI,GACD,GAAE,CAACV,KAGF,2BACGK,IAAW,SAACS,EAAA,EAAD,IACXP,IAAS,uBAAG,0BACb,eAAIQ,UAAWC,EAAAA,KAAf,SACGb,EAAOc,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAAA,KAAf,WACE,gBACED,UAAWC,EAAAA,KACXG,MAAM,QACNC,IACEF,EAAMG,aACFC,EAAAA,GAAYJ,EAAMG,aADtB,0DAIFE,IAAKL,EAAMM,iBAEb,iBAAKT,UAAWC,EAAAA,KAAhB,WACE,uBAAIE,EAAMO,QACV,yBAAG,cAAYP,EAAMQ,kBAbQR,EAAMS,GADxB,QAqBxB,C,sLCpDKC,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILX,EAAY,kCAEZY,EAAmB,mCAAG,sGACVN,EAASO,IAAI,uBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNQ,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMd,GAAN,yFACRC,EAASO,IAAT,gBAAsBR,IADd,uBACvBS,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBzB,EAAgB,mCAAG,WAAMgB,GAAN,yFACPC,EAASO,IAAT,gBAAsBR,EAAtB,aADO,uBACtBS,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qD","sources":["pages/CastPage/CastPage.module.css","pages/CastPage/CastPage.jsx","services/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import styles from './CastPage.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieActors, IMAGE_URL } from 'services/api-movies';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovieActors = async () => {\n      setLoading(true);\n      try {\n        const { cast } = await fetchMovieActors(movieId);\n\n        setActors(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>Something goes wrong</p>}\n      <ul className={styles.list}>\n        {actors.map(actor => (\n          <li className={styles.item} key={actor.id}>\n            <img\n              className={styles.foto}\n              width=\"200px\"\n              src={\n                actor.profile_path\n                  ? IMAGE_URL + actor.profile_path\n                  : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n              }\n              alt={actor.original_name}\n            />\n            <div className={styles.info}>\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CastPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: '2a69168ab09e504b4afd9410c733dd67',\n        language: 'en-Us',\n    },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","error","setError","useEffect","getMovieActors","fetchMovieActors","cast","message","Loader","className","styles","map","actor","width","src","profile_path","IMAGE_URL","alt","original_name","name","character","id","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","data","searchMovies","query","page","include_adult","fetchMovieDetails"],"sourceRoot":""}